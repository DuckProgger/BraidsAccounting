<UserControl x:Class="BraidsAccounting.Views.StoreView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BraidsAccounting.Views"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:vm="clr-namespace:BraidsAccounting.ViewModels" 
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:prism="http://prismlibrary.com/" 
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d"              
             d:DesignHeight="450" d:DesignWidth="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadDataCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="IsVisibleChanged">
            <i:InvokeCommandAction Command="{Binding LoadDataCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <!--<UserControl.DataContext>
        <vm:StoreViewModel/>
    </UserControl.DataContext>-->
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!--<Style x:Key="FadeOutButton" TargetType="{x:Type Button}"
               BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <Style.Setters>
                <Setter Property="Opacity" Value="0"/>
            </Style.Setters>
            <Style.Triggers>
                <EventTrigger  RoutedEvent="Control.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Control.MouseLeave" >
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>-->
    </UserControl.Resources>
    <!--<UserControl.Visibility>
        <Binding Path="IsVisible" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource BooleanToVisibilityConverter}" />
    </UserControl.Visibility>-->
    <md:DialogHost>
        <md:DialogHost.DialogContent>
            <StackPanel Margin="20" MinWidth="300">
                <TextBlock Text="Удалить выбранный товар?" />   
                <Grid Margin="0,10,0,-10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button Content="Отмена"
                            Style="{StaticResource MaterialDesignFlatAccentButton}"
                            Command="{x:Static md:DialogHost.CloseDialogCommand}" />
                    <Button Content="Удалить"
                            Grid.Column="1"
                            Style="{StaticResource MaterialDesignFlatButton}"
                            IsDefault="True"
                            Command="{Binding 
                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:StoreView}}, 
                                    Path=DataContext.RemoveItemCommand}" />
                </Grid>
            </StackPanel>
        </md:DialogHost.DialogContent>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="0.2*"/>
                <RowDefinition Height="0.08*"/>
            </Grid.RowDefinitions>
            <DataGrid Name="List"
            Grid.Row="0" ItemsSource="{Binding StoreItems, UpdateSourceTrigger=PropertyChanged}" 
                  SelectedItem="{Binding SelectedStoreItem}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Производитель" Binding="{Binding Item.Manufacturer.Name}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Модель" Binding="{Binding Item.Article}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Цвет" Binding="{Binding Item.Color}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Количество"  Binding="{Binding Count}" IsReadOnly="True"/>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="Редактирать" 
                                        Command="{Binding 
                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:StoreView}}, 
                                    Path=DataContext.EditItemCommand}"
                                        CommandParameter="EditStoreItemWindow"
                                        Visibility="{Binding IsMouseOver,
                                 RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}, 
                                 Converter={StaticResource BooleanToVisibilityConverter}}"
                                       >
                                        <!--<Button.Visibility>
                                        <Binding 
                                           RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}"
                                            
                                           Path="IsMouseOver" 
                                            UpdateSourceTrigger="PropertyChanged" 
                                            Converter="{StaticResource BooleanToVisibilityConverter}" />
                                    </Button.Visibility>-->
                                        <!--<Button.Template>
                                        <ControlTemplate>
                                            <ControlTemplate.Triggers>
                                                <Trigger SourceName="List" Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Setter TargetName="MyEllipse" Property="Visibility" Value="Hidden"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>-->
                                    </Button>
                                    <Button Content="Удалить"
                                        Command="{x:Static md:DialogHost.OpenDialogCommand}"
                                        Visibility="{Binding IsMouseOver,
                                 RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}, 
                                 Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Button Grid.Row="1" 
                Content="Добавить товар" 
                Command="{Binding NavigateToOtherWindowCommand}" 
                CommandParameter="AddStoreItemWindow"/>
            <Grid Grid.Row="2">
                <TextBlock
                           Foreground="DarkGreen"
                           TextAlignment="Center"
                           DataContext="{Binding StatusMessage}"
                           Text="{Binding Message}"
                           Visibility="{Binding HasMessage, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
        </Grid>
    </md:DialogHost>
</UserControl>

<!--d:DataContext="{d:DesignInstance {x:Type vm:StoreViewModel}, IsDesignTimeCreatable=True}"-->
<!--Path="IsMouseOver"-->

<!--Style="{StaticResource FadeOutButton}"-->

<!--Visibility="{Binding IsMouseOver,
                                 RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}, 
                                 Converter={StaticResource BooleanToVisibilityConverter}}"-->

<!--Command="{Binding 
                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:StoreView}}, 
                                    Path=DataContext.RemoveItemCommand}"-->