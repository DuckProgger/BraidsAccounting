<UserControl x:Class="BraidsAccounting.Views.ServiceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BraidsAccounting.Views"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <md:DialogHost>
        <md:DialogHost.DialogContent>
            <StackPanel Margin="20" MinWidth="300">
                <TextBlock Text="Сохранить новую работу?" />
                <TextBlock Foreground="DarkRed"
                           TextAlignment="Center"
                           DataContext="{Binding WarningMessage}"
                           Text="{Binding Message}"
                           Visibility="{Binding HasMessage, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Grid Margin="0,10,0,-10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button Content="Отмена"
                            Style="{StaticResource MaterialDesignFlatAccentButton}"
                            Command="{x:Static md:DialogHost.CloseDialogCommand}" />
                    <Button Content="Сохранить"
                            Grid.Column="1"
                            Style="{StaticResource MaterialDesignFlatButton}"
                            IsDefault="True"
                            Command="{Binding CreateServiceCommand}" />
                </Grid>
            </StackPanel>
        </md:DialogHost.DialogContent>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.2*"/>
                <RowDefinition/>
                <RowDefinition Height="0.2*"/>
                <RowDefinition Height="0.2*"/>
                <RowDefinition Height="0.1*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" >
                        <TextBlock Text="Имя" HorizontalAlignment="Center"/>
                        <TextBox       
                            Padding="3"                        
                            Text="{Binding Service.Name, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MyMaterialDesignOutlinedTextBox}" />
                    </StackPanel>
                    <StackPanel Grid.Column="1" >
                        <TextBlock Text="Стоимость работы" HorizontalAlignment="Center"/>
                        <TextBox  
                    Padding="3"                           
                    Text="{Binding Service.Profit, UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource MyMaterialDesignOutlinedTextBox}" />
                    </StackPanel>
                </Grid>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="67*"/>
                </Grid.ColumnDefinitions>
                <DataGrid Grid.Row="0" ItemsSource="{Binding WastedItems, UpdateSourceTrigger=PropertyChanged}" 
                  SelectedItem="{Binding WastedItem}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False" Grid.ColumnSpan="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Производитель" Binding="{Binding Manufacturer}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Модель" Binding="{Binding Article}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Цвет" Binding="{Binding Color}" IsReadOnly="True"/>
                        <DataGridTemplateColumn Header="Количество">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Count, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="На складе"  Binding="{Binding MaxCount}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

            <Grid Grid.Row="2">
                <Button Content="Добавить" Command="{Binding SelectStoreItemCommand}"/>
            </Grid>
            <Grid Grid.Row="3">
                <Button Content="Сохранить" Command="{Binding OpenDialogCommand}"/>
            </Grid>
            <Grid Grid.Row="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <TextBlock
                           Foreground="DarkRed"
                           TextAlignment="Center"
                           DataContext="{Binding ErrorMessage}"
                           Text="{Binding Message}"
                           Visibility="{Binding HasMessage, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <TextBlock
                           Foreground="DarkGreen"
                           TextAlignment="Center"
                           DataContext="{Binding StatusMessage}"
                           Text="{Binding Message}"
                           Visibility="{Binding HasMessage, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
        </Grid>
    </md:DialogHost>
</UserControl>
