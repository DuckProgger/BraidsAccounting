// <auto-generated />
using BraidsAccounting.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BraidsAccounting.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220318031742_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BraidsAccounting.DAL.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("BraidsAccounting.DAL.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("NetProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("BraidsAccounting.DAL.Entities.StoreItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("BraidsAccounting.DAL.Entities.Service", b =>
                {
                    b.OwnsMany("BraidsAccounting.DAL.Entities.EnumerableItem", "WastedItems", b1 =>
                        {
                            b1.Property<int>("ServiceId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<int>("Count")
                                .HasColumnType("int");

                            b1.Property<int>("ItemId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ServiceId", "Id");

                            b1.HasIndex("ItemId");

                            b1.ToTable("Services_WastedItems");

                            b1.HasOne("BraidsAccounting.DAL.Entities.Item", "Item")
                                .WithMany()
                                .HasForeignKey("ItemId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("ServiceId");

                            b1.Navigation("Item");
                        });

                    b.Navigation("WastedItems");
                });

            modelBuilder.Entity("BraidsAccounting.DAL.Entities.StoreItem", b =>
                {
                    b.OwnsOne("BraidsAccounting.DAL.Entities.EnumerableItem", "EnumerableItem", b1 =>
                        {
                            b1.Property<int>("StoreItemId")
                                .HasColumnType("int");

                            b1.Property<int>("Count")
                                .HasColumnType("int");

                            b1.Property<int>("ItemId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("StoreItemId");

                            b1.HasIndex("ItemId");

                            b1.ToTable("Store");

                            b1.HasOne("BraidsAccounting.DAL.Entities.Item", "Item")
                                .WithMany()
                                .HasForeignKey("ItemId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("StoreItemId");

                            b1.Navigation("Item");
                        });

                    b.Navigation("EnumerableItem")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
